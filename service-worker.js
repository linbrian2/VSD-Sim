/* eslint-env serviceworker */
'use strict';

import { precacheAndRoute } from 'workbox-precaching';
/**
 * Precache all of the assets generated by your build process.
 * Their URLs are injected into the manifest variable below.
 * This variable must be present somewhere in your service worker file,
 * even if you decide not to use precaching. See https://cra.link/PWA
 */
precacheAndRoute(self.__WB_MANIFEST);

self.addEventListener('install', () => {
  console.log('WORKER: install event in progress.');
  self.skipWaiting();
});

self.addEventListener('push', function(event) {
  console.log('[Service Worker] Push Received.');
  //console.log(`[Service Worker] Push had this data: "${event.data.text()}"`);

  const options = {
    body: 'Hello world!',
    icon: './images/logo-192x192.png',
    badge: './images/badge-72x72.png'
  };

  const data = event.data.json();

  if (data.body) {
    options.body = data.body;
  }

  if (data.tag) {
    options.tag = data.tag;
  }

  if (data.link) {
    options.actions = [{ action: 'view', title: 'Click for details' }];
    options.data = { url: data.link };
  }

  if (data.image) {
    options.image = data.image;
  }

  if (data.sound) {
    options.sound = './images/message-pop.mp3';
  }

  let title = 'AI-TOMS Incident';
  if (data.topic) {
    title = data.topic;
  }

  event.waitUntil(self.registration.showNotification(title, options));
});

self.addEventListener('notificationclick', function(event) {
  console.log('[Service Worker] Notification clicked.');
  event.notification.close();

  let clickResponse = Promise.resolve();
  if (event.notification.data && event.notification.data.url) {
    clickResponse = clients.openWindow(event.notification.data.url);
  }

  event.waitUntil(clickResponse);
});
