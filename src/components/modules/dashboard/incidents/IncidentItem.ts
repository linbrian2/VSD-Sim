// Generated by https://quicktype.io

export interface IncidentItem {
    id:             number;
    linkId:         LinkID;
    shortName:      LinkID;
    segments:       LinkID[];
    shortNames:     LinkID[];
    segmentCount:   number;
    direction:      Direction;
    route:          string;
    region:         string;
    status:         number;
    type:           string;
    reason:         string;
    dateCreated:    number;
    lastUpdated:    number;
    startTime:      number;
    endTime:        number;
    duration:       number;
    location:       Location;
    info:           Info;
    timeline:       Timeline[];
    items:          Item[];
    flagBy:         string;
    severity:       number;
    severityColor:  string;
    evidenceCount:  number;
    evidenceCounts: EvidenceCounts;
    evidences:      number[];
    mitigation:     boolean;
    address:        string;
    detectors:      number[];
}

export enum Direction {
    Nb = "NB",
}

export interface EvidenceCounts {
    flow:      number;
    bluetooth: number;
    waze:      number;
}

export interface Info {
    shortName:   LinkID;
    description: string;
    startPoint:  string;
    endPoint:    string;
    midPoint:    Location;
    distance:    number;
    route:       string;
    seq:         number;
    direction:   Direction;
    stationId:   string;
    cameras:     Camera[];
}

export interface Camera {
    id:       string;
    name:     string;
    position: Location;
    seq:      number;
}

export interface Location {
    lat: number;
    lng: number;
}

export enum LinkID {
    Nbt0034Nbt0035 = "NBT0034-NBT0035",
    Nbt0035Nbt0039 = "NBT0035-NBT0039",
    Nbt0039Nbt0036 = "NBT0039-NBT0036",
}

export interface Item {
    type: number;
    data: Data;
}

export interface Data {
    id?:                 number;
    time?:               number;
    deviceId?:           number;
    direction?:          Direction;
    speed?:              number;
    volume?:             number;
    occupancy?:          number;
    mdist?:              number;
    severity?:           number;
    status?:             number;
    linkId?:             LinkID;
    flowLevel?:          number;
    flowStatus?:         FlowStatus;
    flowColor?:          FlowColor;
    breakdown?:          number;
    title?:              string;
    name?:               string;
    position?:           Location;
    vo?:                 number;
    avgSpd?:             number;
    avgVol?:             number;
    avgOcc?:             number;
    travelTime?:         number;
    avgSpeed?:           number;
    updated?:            number;
    min?:                number;
    max?:                number;
    waitTime?:           number;
    pctl25?:             number;
    pctl75?:             number;
    avgLinkSpeed?:       number;
    meanTravelTime?:     number;
    shortName?:          LinkID;
    alertType?:          number;
    alertCount?:         number;
    details?:            string;
    windGustDir?:        number;
    sunrise?:            string;
    windAvg?:            number;
    visibility?:         number;
    windGust?:           number;
    windGustHeading?:    string;
    conditionText?:      string;
    maxTemp?:            number;
    airTemp?:            number;
    wetBulbTemp?:        number;
    dataReceived?:       number;
    dewPoint?:           number;
    hourlyWeather?:      HourlyWeather[];
    minTemp?:            number;
    conditionCode?:      string;
    lastPollSuccessful?: boolean;
    windAvgHeading?:     string;
    precip?:             number;
    sunset?:             string;
    roadSurface?:        string;
    relHumidity?:        number;
    windAvgDir?:         number;
    stationId?:          string;
}

export enum FlowColor {
    Ffc031 = "#ffc031",
    Ffff00 = "#ffff00",
    The00Ff33 = "#00ff33",
}

export enum FlowStatus {
    MinorDelay = "Minor Delay",
    NoDelay = "No Delay",
}

export interface HourlyWeather {
    time: number;
    temp: number;
    code: string;
}

export interface Timeline {
    color: string;
    icon:  string;
    time:  string;
    event: string;
}
