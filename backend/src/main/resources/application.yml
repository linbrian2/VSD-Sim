micronaut:
  application:
    name: backend-database-service
    version: 1.0.0
    description: Process API requests from backend database
  server:
    port: 4000
    cors:
      enabled: true
    idle-timeout: 10h
    read-idle-timeout: 10h
    write-idle-timeout: 10h
  io:
    watch:
      paths: src/main
      restart: true
  security:
    enabled: true
    token:
      basic-auth:
        enabled: false
      jwt:
        enabled: true
        signatures:
          secret:
            generator:
              secret: ${JWT_SIGNATURE_SECRET:NngmELXxwyGtdt00yp4Mvn7NM7hCLgpaBDN8MCxMdtic8L4lCgnwuDcYGPtY}
              jws-algorithm: HS256

rabbitmq:
  enabled: false
  host: ${RABBITMQ_HOST:10.22.1.6}
  port: ${RABBITMQ_PORT:5672}
  username: ${RABBITMQ_USERNAME:iai}
  password: ${RABBITMQ_PASSWORD:iaimq@15400}

minio:
  accessKey: ${MINIO_USERNAME:iai}
  secretKey: ${MINIO_PASSWORD:iaiminio@15400}
  endpoint: ${MINIO_URL:`http://208.250.51.100:9000`}

redis:
  uri: ${REDIS_URL:`redis://RMJqwaCHzfD256ypqluE@10.22.1.6:6379`}
  timeout: 10s

datasources:
  default:
    dbCreate: invalidate
    url: jdbc:mysql://10.23.1.10/deldot_traffic?useUnicode=yes&autoReconnect=true&useSSL=false
    username: minerva
    password: '#Minerva'
    pooled: true
    jmxExport: true
    driverClassName: com.mysql.jdbc.Driver
    dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    jmxEnabled: true
    initialSize: 5
    maxActive: 50
    minIdle: 5
    maxIdle: 25
    maxWait: 10000
    maxAge: 600000
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 60000
    validationQuery: "SELECT 1"
    validationQueryTimeout: 3
    validationInterval: 15000
    testOnBorrow: true
    testWhileIdle: true
    testOnReturn: false
    jdbcInterceptors: "ConnectionState;StatementCache(max=200)"
  anomaly:
    dbCreate: invalidate
    url: jdbc:mysql://10.23.1.10/deldot_anomaly?useUnicode=yes&autoReconnect=true&useSSL=false
    username: minerva
    password: '#Minerva'
    pooled: true
    jmxExport: true
    driverClassName: com.mysql.jdbc.Driver
    dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    jmxEnabled: true
    initialSize: 5
    maxActive: 50
    minIdle: 5
    maxIdle: 25
    maxWait: 10000
    maxAge: 600000
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 60000
    validationQuery: "SELECT 1"
    validationQueryTimeout: 3
    validationInterval: 15000
    testOnBorrow: true
    testWhileIdle: true
    testOnReturn: false
    jdbcInterceptors: "ConnectionState;StatementCache(max=200)"
  solution:
    dbCreate: invalidate
    url: jdbc:mysql://10.23.1.10/deldot_solution?useUnicode=yes&autoReconnect=true&useSSL=false
    username: minerva
    password: '#Minerva'
    pooled: true
    jmxExport: true
    driverClassName: com.mysql.jdbc.Driver
    dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    jmxEnabled: true
    initialSize: 5
    maxActive: 50
    minIdle: 5
    maxIdle: 25
    maxWait: 10000
    maxAge: 600000
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 60000
    validationQuery: "SELECT 1"
    validationQueryTimeout: 3
    validationInterval: 15000
    testOnBorrow: true
    testWhileIdle: true
    testOnReturn: false
    jdbcInterceptors: "ConnectionState;StatementCache(max=200)"
  vision:
    dbCreate: invalidate
    url: jdbc:mysql://10.23.1.10/deldot_vision?useUnicode=yes&autoReconnect=true&useSSL=false
    username: minerva
    password: '#Minerva'
    pooled: true
    jmxExport: true
    driverClassName: com.mysql.jdbc.Driver
    dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    jmxEnabled: true
    initialSize: 5
    maxActive: 50
    minIdle: 5
    maxIdle: 25
    maxWait: 10000
    maxAge: 600000
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 60000
    validationQuery: "SELECT 1"
    validationQueryTimeout: 3
    validationInterval: 15000
    testOnBorrow: true
    testWhileIdle: true
    testOnReturn: false
    jdbcInterceptors: "ConnectionState;StatementCache(max=200)"

jpa:
  default:
    packages-to-scan:
      - 'com.iai.traffic.domain.traffic'
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: false
        generate_statistics: false
        jdbc:
          batch_size: 1000
        order_inserts: true
  anomaly:
    packages-to-scan:
      - 'com.iai.traffic.domain.anomaly'
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: false
        generate_statistics: false
        jdbc:
          batch_size: 1000
        order_inserts: true
  solution:
    packages-to-scan:
      - 'com.iai.traffic.domain.solution'
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: false
        generate_statistics: false
        jdbc:
          batch_size: 1000
        order_inserts: true
  vision:
    packages-to-scan:
      - 'com.iai.traffic.domain.vision'
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        show_sql: false
        generate_statistics: false
        jdbc:
          batch_size: 1000
        order_inserts: true
