plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}

version "0.1"
group "com.iai.traffic"

repositories {
    mavenCentral()
    //maven { url "https://jcenter.bintray.com" }
    //https://blog.gradle.org/jcenter-shutdown
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-json
    implementation 'org.codehaus.groovy:groovy-json:2.0.1'

    compile 'io.micronaut.data:micronaut-data-hibernate-jpa:1.0.0'
    runtime 'io.micronaut.configuration:micronaut-jdbc-tomcat'
    runtime 'mysql:mysql-connector-java:5.1.38'
    compileOnly 'io.micronaut.data:micronaut-data-processor:1.0.0'

    compile 'commons-codec:commons-codec:1.14'

    compile "io.micronaut:micronaut-security"
    implementation "io.micronaut:micronaut-security-jwt"

    //    implementation 'io.micronaut.configuration:micronaut-redis-lettuce'
    implementation 'io.lettuce:lettuce-core:6.2.0.RELEASE'

    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-runtime-groovy"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.5.0"

    compile "commons-io:commons-io:2.6"
    compile 'io.minio:minio:7.1.0'
}

test.classpath += configurations.developmentOnly

mainClassName = "com.iai.traffic.Application"

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Dmicronaut.environments=dev')
